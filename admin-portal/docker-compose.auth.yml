version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: hedera-mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hedera-mcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    container_name: hedera-mcp-postgres
    environment:
      POSTGRES_DB: hedera_mcp
      POSTGRES_USER: ${DB_USER:-hedera}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - hedera-mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hedera}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp-server:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: hedera-mcp-server
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://${DB_USER:-hedera}:${DB_PASSWORD}@postgres:5432/hedera_mcp
      REDIS_URL: redis://redis:6379
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
      SERVER_PROFILE_TOPIC_ID: ${SERVER_PROFILE_TOPIC_ID}
      FAST_MCP_PORT: ${FAST_MCP_PORT:-3000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}
    ports:
      - "${FAST_MCP_PORT:-3000}:${FAST_MCP_PORT:-3000}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hedera-mcp-network
    healthcheck:
      test: ["CMD", "node", "docker/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-portal:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hedera-mcp-admin
    environment:
      NEXT_PUBLIC_MCP_SERVER_URL: http://mcp-server:${FAST_MCP_PORT:-3000}
    ports:
      - "3001:3000"
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - hedera-mcp-network

volumes:
  redis-data:
  postgres-data:

networks:
  hedera-mcp-network:
    driver: bridge