version: '3.8'

# Shared environment variables
x-app-environment: &app-environment
  # Hedera Configuration
  HEDERA_NETWORK: ${HEDERA_NETWORK:-testnet}
  HEDERA_OPERATOR_ID: ${HEDERA_OPERATOR_ID}
  HEDERA_OPERATOR_KEY: ${HEDERA_OPERATOR_KEY}
  SERVER_ACCOUNT_ID: ${SERVER_ACCOUNT_ID}
  SERVER_PRIVATE_KEY: ${SERVER_PRIVATE_KEY}
  
  # Database
  DATABASE_URL: ${DATABASE_URL:-sqlite:///app/data/credits.db}
  
  # Credits System
  CREDITS_CONVERSION_RATE: ${CREDITS_CONVERSION_RATE:-1000}
  CREDITS_MINIMUM_PAYMENT: ${CREDITS_MINIMUM_PAYMENT:-1}
  CREDITS_MAXIMUM_PAYMENT: ${CREDITS_MAXIMUM_PAYMENT:-10000}
  
  # API Keys
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  API_KEY_ENCRYPTION_KEY: ${API_KEY_ENCRYPTION_KEY}
  
  # Admin Portal
  NEXT_PUBLIC_HEDERA_NETWORK: ${HEDERA_NETWORK:-testnet}
  NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${WALLETCONNECT_PROJECT_ID}
  NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://localhost:3002}
  NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3001}

services:
  # ============= Main Application =============
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
      args:
        - NEXT_PUBLIC_HEDERA_NETWORK=${HEDERA_NETWORK:-testnet}
        - NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
    image: hedera-mcp:${BUILD_TARGET:-production}
    container_name: hedera-mcp
    ports:
      - "${MCP_PORT:-3000}:3000"      # MCP Server
      - "${ADMIN_PORT:-3001}:3001"    # Admin Portal  
      - "${API_PORT:-3002}:3002"      # HTTP API
    environment:
      <<: *app-environment
      NODE_ENV: ${NODE_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
      - audit_logs:/app/audit-logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - hedera-network


  # ============= Database Migration Tool =============
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: hedera-mcp:production
    container_name: hedera-migrate
    command: ["tsx", "src/scripts/migrate.ts"]
    environment:
      <<: *app-environment
      NODE_ENV: production
    volumes:
      - app_data:/app/data
    networks:
      - hedera-network
    profiles:
      - tools

  # ============= Database Backup =============
  backup:
    image: alpine:latest
    container_name: hedera-backup
    volumes:
      - app_data:/data:ro
      - ./backups:/backups
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        timestamp=$$(date +%Y%m%d_%H%M%S) &&
        sqlite3 /data/credits.db '.backup /backups/credits_$$timestamp.db' &&
        echo 'Backup completed: credits_$$timestamp.db'
      "
    networks:
      - hedera-network
    profiles:
      - tools

volumes:
  app_data:
    driver: local
  app_logs:
    driver: local
  audit_logs:
    driver: local

networks:
  hedera-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16