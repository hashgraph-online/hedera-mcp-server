version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  mcp-server:
    build:
      context: .
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: hedera-mcp-server:latest
    container_name: hedera-mcp-server
    ports:
      - "${MCP_PORT:-3000}:3000"  # MCP server (stdio/SSE)
      - "${API_PORT:-3002}:3002"    # HTTP API for admin portal
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/data/credits.db}
      - HEDERA_NETWORK=${HEDERA_NETWORK}
      - HEDERA_OPERATOR_ID=${HEDERA_OPERATOR_ID}
      - HEDERA_OPERATOR_KEY=${HEDERA_OPERATOR_KEY}
      - SERVER_ACCOUNT_ID=${SERVER_ACCOUNT_ID}
      - SERVER_PRIVATE_KEY=${SERVER_PRIVATE_KEY}
      - CREDITS_CONVERSION_RATE=${CREDITS_CONVERSION_RATE:-1000}
      - CREDITS_MINIMUM_PAYMENT=${CREDITS_MINIMUM_PAYMENT:-1}
      - CREDITS_MAXIMUM_PAYMENT=${CREDITS_MAXIMUM_PAYMENT:-10000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ADMIN_PORTAL_URL=${ADMIN_PORTAL_URL:-http://admin-portal:3001}
    volumes:
      - mcp_data:/app/data
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    depends_on:
      redis:
        condition: service_healthy
        required: false
    networks:
      - mcp-network

  admin-portal:
    build:
      context: ./admin-portal
      target: production
      args:
        - NEXT_PUBLIC_HEDERA_NETWORK=${HEDERA_NETWORK:-testnet}
        - NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
        - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://mcp-server:3000}
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3001}
        - BUILDKIT_INLINE_CACHE=1
    image: hedera-admin-portal:latest
    container_name: hedera-admin-portal
    ports:
      - "${ADMIN_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_HEDERA_NETWORK=${HEDERA_NETWORK:-testnet}
      - NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://mcp-server:3002}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3001}
      - MCP_SERVER_URL=http://mcp-server:3000/stream
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - mcp-network

  redis:
    image: redis:7-alpine
    container_name: hedera-redis
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    networks:
      - mcp-network
    profiles:
      - with-redis

  nginx:
    image: nginx:alpine
    container_name: hedera-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mcp-server
      - admin-portal
    networks:
      - mcp-network
    profiles:
      - with-nginx

volumes:
  mcp_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16